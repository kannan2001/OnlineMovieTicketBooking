@model OnlineTicketBookingSystem.Models.Booking

@{
    ViewBag.Title = "AddTicket";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="~/sfclogo.ico" />
    <title>Add Ticket</title>
    <link href="~/CSSStyle/TicketStyle.css" rel="stylesheet" />
</head>
<body>


    @using (Html.BeginForm())
    {

        @Html.AntiForgeryToken()
        <div class="boxmodel" id="login">
            <div class="form-horizontal">
                <h1>Book Ticket</h1>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Moviename, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Moviename, new SelectList(Enum.GetValues(typeof(OnlineTicketBookingSystem.Models.Movies))), "Select Movie")
                        @Html.ValidationMessageFor(model => model.Moviename, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SeatRow, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SeatRow, new SelectList(Enum.GetValues(typeof(OnlineTicketBookingSystem.Models.SeatRow))), "Select row")
                        <small></small>
                        @Html.ValidationMessageFor(model => model.SeatRow, "", new { @class = "text-danger" })
                    </div>
                </div>
                <ul class="showcase">
                    <li>
                        <div id="seat" class="seat"></div>
                        <small class="status" style="font-size: 1em;">N/A</small>
                    </li>
                    <li>
                        <div id="seat" class="seat selected"></div>
                        <small class="status" style="font-size: 1em;">Selected</small>
                    </li>
                    <li>
                        <div id="seat" class="seat occupied"></div>
                        <small class="status" style="font-size: 1em;">Occupied</small>
                    </li>
                </ul>
                <div class="form-group">
                    <div class="container">
                        <div class="screen"></div>

                        <div class="row">
                            <div id="Seatnumber" class="seat" value="1"></div>
                            <div id="Seatnumber" class="seat" value="2"></div>
                            <div id="Seatnumber" class="seat" value="3"></div>
                            <div id="Seatnumber" class="seat" value="4"></div>
                            <div id="Seatnumber" class="seat occupied" value="5"></div>
                            <div id="Seatnumber" class="seat occupied" value="6"></div>
                            <div id="Seatnumber" class="seat" value="7"></div>
                            <div id="Seatnumber" class="seat" value="8"></div>
                        </div>
                    </div>
                </div>
                

                <div class="form-group">
                    @Html.LabelFor(model => model.Seatnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <p id="results"></p>
                        @Html.EditorFor(model => model.Seatnumber, new { htmlAttributes = new { @class = "form-control", @onclick="revme()" } })
                        <small></small>
                        @Html.ValidationMessageFor(model => model.Seatnumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        <small></small>
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <form method="post" action="~/Booking/CreditCard">
                            <input type="submit" value="Book!!" class="btn btn-default" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <script src="~/Scripts/BookingScript.js"></script>
        <script src="~/Scripts/bookscript.js"></script>
    }
</body>
</html>
